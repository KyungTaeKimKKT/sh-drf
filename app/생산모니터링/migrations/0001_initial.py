# Generated by Django 4.2.14 on 2025-06-16 14:29

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='NEW_SENSOR_생산_MASTER',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('server_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('rpi_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('sensor_id', models.CharField(default='', max_length=10)),
                ('s1', models.BooleanField(default=True, help_text='0: 미인식, 1:인식')),
                ('s2', models.BooleanField(default=True, help_text='0: 미인식, 1:인식')),
                ('생산수량', models.IntegerField(default=0)),
                ('sensor_mode', models.CharField(default='', max_length=10)),
                ('판정_max', models.FloatField(default=0)),
                ('판정_min', models.FloatField(default=0)),
            ],
            options={
                'db_table': 'iot"."sensor_생산_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='order',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('sensor_id', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('line_no', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('plan_qty', models.IntegerField(blank=True, default=0, null=True)),
                ('job_qty', models.IntegerField(blank=True, default=0, null=True)),
                ('oper_yn', models.CharField(blank=True, default='', max_length=2, null=True)),
                ('crt_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('mod_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'shinwoo"."order',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='sensor',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('crt_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('rd_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('cpu_temp', models.FloatField(blank=True, default='', null=True)),
                ('cpu_util', models.FloatField(blank=True, default='', null=True)),
                ('mem_free', models.FloatField(blank=True, default='', null=True)),
                ('mem_total', models.FloatField(blank=True, default='', null=True)),
                ('disk_free', models.FloatField(blank=True, default='', null=True)),
                ('disk_total', models.FloatField(blank=True, default='', null=True)),
                ('sensor_id', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('sensor_type', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('tag', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('value1', models.IntegerField(blank=True, default=0, null=True)),
                ('value2', models.IntegerField(blank=True, default=0, null=True)),
                ('value3', models.IntegerField(blank=True, default=0, null=True)),
                ('job_qty', models.IntegerField(blank=True, default=0, null=True)),
            ],
            options={
                'db_table': 'shinwoo"."sensor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='sensor_기준정보',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sensor_id', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('sensor_name', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('sensor_설명', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('ip_주소', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='0: 미인식, 1:인식')),
                ('tact_time', models.IntegerField(blank=True, default=90, null=True)),
                ('duration', models.IntegerField(blank=True, default=3, null=True)),
                ('prevent', models.IntegerField(blank=True, default=0, null=True)),
                ('task_yellow', models.IntegerField(blank=True, default=5, null=True)),
                ('task_red', models.IntegerField(blank=True, default=5, null=True)),
                ('mode', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('sensor_수량', models.IntegerField(blank=True, default=2, null=True)),
                ('생성시간', models.DateTimeField(default=django.utils.timezone.now)),
                ('수정시간', models.DateTimeField(default=django.utils.timezone.now)),
                ('line_no', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('alarm_yellow', models.IntegerField(blank=True, default=5, null=True)),
                ('alarm_red', models.IntegerField(blank=True, default=5, null=True)),
            ],
            options={
                'db_table': 'iot"."sensor_기준정보',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='test_server',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('context', models.TextField(blank=True, default='', null=True)),
                ('서버시간', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'public"."temp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='생산계획실적',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sensor_id', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('line_no', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('plan_qty', models.IntegerField(blank=True, default=0, null=True)),
                ('job_qty', models.IntegerField(blank=True, default=0, null=True)),
                ('oper_yn', models.CharField(blank=True, default='', max_length=2, null=True)),
                ('생성시간', models.DateTimeField(default=django.utils.timezone.now)),
                ('등록자', models.CharField(blank=True, default='', max_length=15, null=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('is_active', models.BooleanField(default=True)),
                ('job_qty_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('생산capa', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'iot"."생산계획실적',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SENSOR_NETWORK_DB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensor_id', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('is_active', models.BooleanField(default=True)),
                ('등록일', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='무재해_DB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('무재해시작', models.DateTimeField(default='')),
                ('is_active', models.BooleanField(default=True)),
                ('published_date', models.DateTimeField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='생산계획_사용자_DB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('사용자', models.CharField(default='', help_text='사용자 성명을 기입, 예)이준환', max_length=10)),
                ('사용구분', models.CharField(default='', help_text='HI, PO, 판금 으로 기입', max_length=10)),
                ('사용List', models.CharField(default='', help_text='S-01,S-02,...로 입력, 공란은 없이 ,로 구분', max_length=150)),
                ('등록일', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='휴식시간_DB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('휴식시간_시작', models.TimeField(default='10:30:00', help_text='휴식시간 시작 시간 입력')),
                ('휴식시간_종료', models.TimeField(default='10:40:00', help_text='휴식시간 종료 시간 입력')),
                ('적용대상', models.CharField(default='', help_text='S-01,S-02,...로 입력, 공란은 없이 ,로 구분', max_length=50)),
                ('등록일', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
    ]
