# =====================
# Build Stage
# =====================
FROM python:3.10-slim AS builder

# 빌드용 패키지 설치
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    libpq-dev \
    unixodbc-dev \
    libglib2.0-dev \
    && rm -rf /var/lib/apt/lists/*

# requirements 복사 및 pip 패키지 설치
COPY ./requirements.slim.txt /tmp/requirements.txt

# 가상환경 생성
RUN python -m venv /py && \
    /py/bin/pip install --upgrade pip && \
    /py/bin/pip install --no-cache-dir -r /tmp/requirements.txt

# =====================
# Final Stage
# =====================
FROM python:3.10-slim

RUN apt-get update && apt-get install -y --no-install-recommends \
    unixodbc \
    libpq5 \
    libglib2.0-0 \
    && rm -rf /var/lib/apt/lists/*

RUN adduser --disabled-password --uid 1000 --gecos "" django

COPY --from=builder /py /py
RUN chown -R django:django /py

COPY . /shapi
RUN chown -R django:django /shapi

WORKDIR /shapi

ENV PYTHONPATH="/shapi:$PYTHONPATH"
ENV PATH="/py/bin:$PATH"
ENV PYTHONUNBUFFERED=1

USER django

CMD ["/py/bin/celery", "-A", "shapi", "beat", "-l", "info"]